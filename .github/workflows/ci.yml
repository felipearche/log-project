name: CI

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

jobs:
  ci:
    name: CI / Python ${{ matrix.py }} - ${{ matrix.os }} (${{ github.event_name }})
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, windows-latest]
        py: ["3.11"]
    runs-on: ${{ matrix.os }}
    timeout-minutes: 20
    concurrency:
      group: ${{ github.workflow }}-${{ github.ref }}-${{ matrix.os }}
      cancel-in-progress: true

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.py }}
          cache: pip
          cache-dependency-path: |
            env/requirements.lock
            env/dev-requirements.lock

      - name: Python version
        run: python -V

      # Ubuntu: hash-locked dev tools; runtime temporarily non-hash
      - name: Install dev tools (Ubuntu, hash-locked)
        if: matrix.os == 'ubuntu-latest'
        run: |
          python -m pip install --upgrade pip
          pip install --require-hashes -r env/dev-requirements.lock

      - name: Install runtime deps (Ubuntu, non-hash temporary)
        if: matrix.os == 'ubuntu-latest'
        run: |
          pip install -r env/requirements.lock

      # Windows: dev tools hash-locked; runtime temporarily non-hash
      - name: Install dev tools (Windows, hash-locked)
        if: matrix.os == 'windows-latest'
        run: |
          python -m pip install --upgrade pip
          pip install --require-hashes -r env/dev-requirements.lock

      - name: Install runtime deps (Windows, non-hash temporary)
        if: matrix.os == 'windows-latest'
        run: |
          pip install -r env/requirements.lock

      - name: Pre-commit
        run: python -m pre_commit run -a

      - name: Mypy
        run: python -m mypy src

      - name: Validate summary rules
        run: python scripts/check_summary.py

      - name: Pytest
        run: python -m pytest -q
